<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Postulante extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Postulante_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    }
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Listing of postulante
     */
    function index()
    {
        if($this->acceso(14)) {
            $rolusuario = $this->session_data['rol'];
            $data['ver_requisitos'] = $rolusuario[19-1]['rolusuario_asignado'];
            $data['postulante'] = $this->Postulante_model->get_all_postulante_estudiante();

            $data['_view'] = 'postulante/index';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Adding a new postulante
     */
    function add()
    {
        if($this->acceso(15)) {
            if(isset($_POST) && count($_POST) > 0)     
            {
                $estado = 3;
                $params = array(
                    'estado_id' => $estado,
                    'estudiante_id' => $this->input->post('estudiante_id'),
                    'plaza_id' => $this->input->post('plaza_id'),
                    'padres_tutores' => $this->input->post('padres_tutores'),
                    'postulante_observacion' => $this->input->post('postulante_observacion'),
                    'postulante_correccion' => $this->input->post('postulante_correccion'),
                );

                $postulante_id = $this->Postulante_model->add_postulante($params);
                redirect('postulante/index');
            }
            else
            {
                /*$this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();
                */
                $this->load->model('Estudiante_model');
                $data['all_estudiante'] = $this->Estudiante_model->get_all_estudiante();

                $this->load->model('Plazas_beca_model');
                $data['all_plazas_becas'] = $this->Plazas_beca_model->get_all_plazas_becas();

                $data['_view'] = 'postulante/add';
                $this->load->view('layouts/main',$data);
            }
        }
    }  

    /*
     * Editing a postulante
     */
    function edit($postulante_id)
    {
        if($this->acceso(16)) {
            // check if the postulante exists before trying to edit it
            $data['postulante'] = $this->Postulante_model->get_thispostulante($postulante_id);

            if(isset($data['postulante']['postulante_id']))
            {
                if(isset($_POST) && count($_POST) > 0)     
                {   
                    $params = array(
                        'estado_id' => $this->input->post('estado_id'),
                        'estudiante_id' => $this->input->post('estudiante_id'),
                        'plaza_id' => $this->input->post('plaza_id'),
                        'padres_tutores' => $this->input->post('padres_tutores'),
                        'postulante_observacion' => $this->input->post('postulante_observacion'),
                        'postulante_correccion' => $this->input->post('postulante_correccion'),
                    );

                    $this->Postulante_model->update_postulante($postulante_id,$params);            
                    redirect('postulante/index');
                }
                else
                {
                    $this->load->model('Estado_model');
                    $tipo = 2; // tipo 2 ==>diferentes estados del postulante
                    $data['all_estado'] = $this->Estado_model->get_tipo_estado($tipo);

                    $this->load->model('Estudiante_model');
                    $data['all_estudiante'] = $this->Estudiante_model->get_all_estudiante();

                    $this->load->model('Plazas_beca_model');
                    $data['all_plazas_becas'] = $this->Plazas_beca_model->get_all_plazas_becas();

                    $data['_view'] = 'postulante/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The postulante you are trying to edit does not exist.');
        }
    } 

    /*
     * Deleting postulante
     */
    /*function remove($postulante_id)
    {
        $postulante = $this->Postulante_model->get_postulante($postulante_id);

        // check if the postulante exists before trying to delete it
        if(isset($postulante['postulante_id']))
        {
            $this->Postulante_model->delete_postulante($postulante_id);
            redirect('postulante/index');
        }
        else
            show_error('The postulante you are trying to delete does not exist.');
    }*/
    /*
     * Ver que cumplan los requisitos para calificar al postulante!..
     */
    function cumplir($postulante_id)
    {
        if($this->acceso(17)) {
            // check if the postulante exists before trying to edit it
            $data['postulante'] = $this->Postulante_model->get_thispostulante($postulante_id);
            if(isset($data['postulante']['postulante_id']))
            {
                $this->load->model('Convocatoria_requisito_model');
                if(isset($_POST) && count($_POST) > 0)
                {
                    $this->load->model('Formulario_autentificacion_model');
                    $all_requisito = $this->Convocatoria_requisito_model->get_all_requisitos($data['postulante']['convocatoria_id']);
                    foreach ($all_requisito as $req) {
                        $cumple = $this->input->post('requisito_id'.$req["requisito_id"]);
                        if(isset($cumple)){
                            $estado_id = 7; //cumple el requisito
                        }else{
                            $estado_id = 8; //no cumple el requisito
                        }
                        $params = array(
                            'convoreq_id' => $req["convoreq_id"],
                            'postulante_id' => $postulante_id,
                            'estado_id' => $estado_id,
                            //'formulario_requisito' => $this->input->post('formulario_requisito'),
                            'formulario_observacion' => $this->input->post('formulario_observacion'.$req["requisito_id"]),
                        );
                        $formulario_id = $this->Formulario_autentificacion_model->add_formulario_autentificacion($params);
                    }
                    $estado_id = 4; // 4 ==> estado REVISADO
                    $params = array(
                        'estado_id' => $estado_id,
                    );
                    $this->Postulante_model->update_postulante($postulante_id,$params);

                    redirect('postulante');
                }else{
                    if(isset($data['postulante']['convocatoria_id'])){
                        $data["con_convocatoria"] = "1";
                        $data['all_requisito'] = $this->Convocatoria_requisito_model->get_all_requisitos($data['postulante']['convocatoria_id']);
                    }else{
                        $data["con_convocatoria"] = "0";
                    }
                    $data['_view'] = 'postulante/cumplir';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The postulante you are trying to edit does not exist.');
        }
    }
    /*
     * Modifica los requisitos de un postulante!..
     */
    function modificar($postulante_id)
    {
        if($this->acceso(18)) {
            // check if the postulante exists before trying to edit it
            $data['postulante'] = $this->Postulante_model->get_thispostulante($postulante_id);
            if(isset($data['postulante']['postulante_id']))
            {
                $this->load->model('Convocatoria_requisito_model');
                $this->load->model('Formulario_autentificacion_model');
                if(isset($_POST) && count($_POST) > 0)
                {
                    $all_requisito = $this->Convocatoria_requisito_model->get_all_requisitos($data['postulante']['convocatoria_id']);
                    $formulario_id = $this->Formulario_autentificacion_model->delete_formulario_postulante($postulante_id);
                    foreach ($all_requisito as $req) {
                        $cumple = $this->input->post('requisito_id'.$req["requisito_id"]);
                        if(isset($cumple)){
                            $estado_id = 7; //cumple el requisito
                        }else{
                            $estado_id = 8; //no cumple el requisito
                        }
                        $params = array(
                            'convoreq_id' => $req["convoreq_id"],
                            'postulante_id' => $postulante_id,
                            'estado_id' => $estado_id,
                            //'formulario_requisito' => $this->input->post('formulario_requisito'),
                            'formulario_observacion' => $this->input->post('formulario_observacion'.$req["requisito_id"]),
                        );
                        $formulario_id = $this->Formulario_autentificacion_model->add_formulario_autentificacion($params);
                    }
                    $estado_id = 4; // 4 ==> estado REVISADO
                    $params = array(
                        'estado_id' => $estado_id,
                    );
                    $this->Postulante_model->update_postulante($postulante_id,$params);

                    redirect('postulante');
                }else{
                    if(isset($data['postulante']['convocatoria_id'])){
                        $data["con_convocatoria"] = "1";
                        $data['all_requisito'] = $this->Convocatoria_requisito_model->get_all_requisitos($data['postulante']['convocatoria_id']);
                        $data['all_formulario'] = $this->Formulario_autentificacion_model->get_all_formulario_postulante($postulante_id);
                    }else{
                        $data["con_convocatoria"] = "0";
                    }
                    $data['_view'] = 'postulante/modificar';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The postulante you are trying to edit does not exist.');
        }
    }
    /* busca formulario de calificacion de requisitos */
    function get_formulariorequisitos()
    {
        //if($this->acceso(103)) {
            if ($this->input->is_ajax_request()) {
                $postulante_id = $this->input->post('postulante_id');
                $this->load->model('Formulario_autentificacion_model');
                $datos = $this->Formulario_autentificacion_model->get_all_formulario_postulante($postulante_id);
                echo json_encode($datos);
            }else{                 
                show_404();
            }
        //}
    }
    /* * registrar nuevo estudante */
    function nuevoestudiante()
    {
        if ($this->input->is_ajax_request()) {
            $params = array(
                'estudiante_nombre' => $this->input->post('estudiante_nombre'),
                'estudiante_apellidos' => $this->input->post('estudiante_apellidos'),
                'estudiante_ci' => $this->input->post('estudiante_ci'),
                'estudiante_codsis' => $this->input->post('estudiante_codsis'),
                'estudiante_email' => $this->input->post('estudiante_email'),
                'estudiante_carrera' => $this->input->post('estudiante_carrera'),
                'estudiante_celular' => $this->input->post('estudiante_celular'),
                'estudiante_telefono' => $this->input->post('estudiante_telefono'),
            );
            $this->load->model('Estudiante_model');
            $estudiante_id = $this->Estudiante_model->add_estudiante($params);
            $datos = $this->Estudiante_model->get_estudiante($estudiante_id);
            echo json_encode($datos);
        }
        else
        {                 
            show_404();
        }
    }
}
